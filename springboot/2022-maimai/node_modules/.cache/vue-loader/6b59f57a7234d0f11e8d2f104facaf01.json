{"remainingRequest":"/Users/maimai/Documents/proooo/2022maimai/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/maimai/Documents/proooo/2022maimai/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/maimai/Documents/proooo/2022maimai/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maimai/Documents/proooo/2022maimai/src/views/Home.vue?vue&type=template&id=fae5bece&scoped=true&","dependencies":[{"path":"/Users/maimai/Documents/proooo/2022maimai/src/views/Home.vue","mtime":1645106223820},{"path":"/Users/maimai/Documents/proooo/2022maimai/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maimai/Documents/proooo/2022maimai/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/maimai/Documents/proooo/2022maimai/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maimai/Documents/proooo/2022maimai/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}